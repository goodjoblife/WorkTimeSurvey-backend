defaults: &defaults
    working_directory: ~/app
    steps:
        - checkout
        - run:
            name: Install Dependencies
            command: yarn install
        - run:
            name: Migrate
            command: npm run migrate
        - run:
            name: Unit test and API test
            command: npm run test -- --timeout 30s
        - run:
            name: Lint
            command: npm run lint

version: 2
jobs:
    build-node-10:
        <<: *defaults
        docker:
            - image: node:10
              environment:
                  MONGODB_URI: mongodb://localhost/goodjob
                  REDIS_URL: redis://localhost
                  NODE_ENV: test
            - image: mongo:3
            - image: redis
    build-node-11:
        <<: *defaults
        docker:
            - image: node:11
              environment:
                  MONGODB_URI: mongodb://localhost/goodjob
                  REDIS_URL: redis://localhost
                  NODE_ENV: test
            - image: mongo:3
            - image: redis
    build-apidoc:
        docker:
            - image: node
        working_directory: ~/app
        steps:
            - checkout
            - run:
                name: Install Dependencies
                command: yarn global add apidoc
            - run:
                name: Build
                command: apidoc -i routes/ -o apidoc/
            - add_ssh_keys
            - deploy:
                name: Deploy to github page
                command: |
                    if [ "${CIRCLE_PROJECT_USERNAME}" == "goodjoblife" ]; then
                        ./.circleci/deploy-apidoc.sh
                    fi
    build-docker:
        working_directory: ~/app
        docker:
            - image: alpine
        steps:
            - checkout
            - run:
                name: Install Docker client & Docker Compose
                command: |
                    apk add --update docker py-pip
                    pip install docker-compose
            - setup_remote_docker
            - run:
                name: Build Docker Image
                command: docker-compose -f .circleci/docker-compose.yml build
            - deploy:
                name: Deploy docker image
                command: |
                    if [ "${CIRCLE_PROJECT_USERNAME}" == "goodjoblife" ]; then
                        ./.circleci/deploy-docker.sh
                    fi
    deploy-dev:
        working_directory: ~/app
        docker:
            - image: buildpack-deps
        steps:
            - run:
                name: Trigger Deploy
                command: |
                    if [ "${CIRCLE_PROJECT_USERNAME}" == "goodjoblife" ]; then
                        curl --user ${CIRCLE_API_TOKEN_FOR_DEPLOY}: \
                            --data build_parameters[CIRCLE_JOB]=build \
                            https://circleci.com/api/v1.1/project/github/mark86092/goodjob-deploy-ci/tree/api-dev
                    fi
    deploy-stage:
        working_directory: ~/app
        docker:
            - image: buildpack-deps
        steps:
            - run:
                name: Trigger Deploy
                command: |
                    if [ "${CIRCLE_PROJECT_USERNAME}" == "goodjoblife" ]; then
                        curl --user ${CIRCLE_API_TOKEN_FOR_DEPLOY}: \
                            --data build_parameters[CIRCLE_JOB]=build \
                            https://circleci.com/api/v1.1/project/github/mark86092/goodjob-deploy-ci/tree/api-stage-v4
                    fi
workflows:
    version: 2
    build_and_test:
        jobs:
            - build-node-10
            - build-node-11
            - build-apidoc:
                filters:
                    branches:
                        only:
                            - master
                requires:
                    - build-node-10
                    - build-node-11
            - build-docker:
                filters:
                    branches:
                        only:
                            - master
                            - dev
                requires:
                    - build-node-10
                    - build-node-11
            - deploy-dev:
                requires:
                    - build-docker
                filters:
                    branches:
                        only: dev
            - deploy-stage:
                requires:
                    - build-docker
                filters:
                    branches:
                        only: master
